from django.core.management.base import BaseCommand
from OffersAndDiscounts.models import Offer
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time


class Command(BaseCommand):
    help = 'Scrapes offers from PetSmart and saves them to the database'

    def handle(self, *args, **kwargs):
        service = Service(
            r'C:\Users\Gurekam\Desktop\University of Windsor\Internship Project\chromedriver\chromedriver-win64\chromedriver.exe')
        driver = webdriver.Chrome(service=service)

        try:
            driver.get('https://www.petsmart.com/sale/')
            WebDriverWait(driver, 10).until(
                EC.presence_of_element_located((By.CLASS_NAME, 'sparky-c-horizontal-overflow-carousel__list'))
            )

            # Loop to process up to 10 list items
            for i in range(10):
                # Refresh the list items each time
                ordered_list = driver.find_element(By.CLASS_NAME, 'sparky-c-horizontal-overflow-carousel__list')
                list_items = ordered_list.find_elements(By.TAG_NAME, 'li')

                if i >= len(list_items):
                    print(f"Less than {i + 1} list items available.")
                    break

                item = list_items[i]
                print(f"Processing item {i + 1}/{len(list_items)}")
                anchors = item.find_elements(By.TAG_NAME, 'a')
                if not anchors:
                    print("No anchor tag found in this list item.")
                    continue

                link = anchors[0].get_attribute('href')
                print(f"Navigating to {link}")

                # Open the link in the current tab
                driver.get(link)

                # Wait for the new page to load
                WebDriverWait(driver, 10).until(
                    EC.presence_of_element_located((By.ID, 'search-result-items'))
                )
                try:
                    product_list = driver.find_element(By.ID, 'search-result-items')
                    list_items1 = product_list.find_elements(By.TAG_NAME, 'li')[:10]

                    for element in list_items1:
                        print(element.text)
                        # Extract data from each element and save it to the database
                        title = element.find_element(By.CLASS_NAME, 'product-name').text
                        url = element.find_element(By.TAG_NAME, 'a').get_attribute('href')
                        description = "Description of the offer"  # Adjust as needed

                        # Print or save the data as needed
                        print(f'Title: {title}, URL: {url}, Description: {description}')
                        # Offer.objects.create(title=title, description=description, url=url)  # Uncomment if using Django model

                except Exception as e:
                    print(f"Failed to extract products: {e}")

                # Navigate back to the main page and wait for the list to be available again
                driver.back()
                WebDriverWait(driver, 10).until(
                    EC.presence_of_element_located((By.CLASS_NAME, 'sparky-c-horizontal-overflow-carousel__list'))
                )

        finally:
            driver.quit()